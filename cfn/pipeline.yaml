AWSTemplateFormatVersion: '2010-09-09'
Description: Pipeline used for Continuous Integration and Deployment

Parameters:
  ProjectName:
    Description: The name of the project
    Type: String
  StageName:
    Description: The name of the stage, e.g. "dev", "preprod", "prod"
    Default: dev
    Type: String
  BranchName:
    Description: CodeCommit branch name for develop
    Type: String
    Default: master
  RepositoryName:
    Description: CodeComit repository name
    Type: String
    Default: aws-fr-houes-lab1-id-serverless

Resources:
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 's3-${AWS::Region}-${ProjectName}-${StageName}-pipeline-artifact'
      VersioningConfiguration:
        Status: Enabled

  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join
              - ''
              - - !GetAtt
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join
              - ''
              - - !GetAtt
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false

  AmazonCloudWatchEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub 'policy-${ProjectName}-dev-event'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'codepipeline:StartPipelineExecution'
                Resource: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'

  AmazonCloudWatchEventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}'
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !Ref BranchName
      Targets:
        - Arn: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: !Sub '${ProjectName}-dev-pipeline'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-${StageName}-build'
      Description: This is a build project
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: STAGE
            Value: !Ref StageName
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn: CloudformationServiceRole
    Properties:
      Name: !Sub '${ProjectName}-${StageName}-pipeline'
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: !Sub '${ProjectName}-${StageName}-source'
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                BranchName: !Ref BranchName
                RepositoryName: !Ref RepositoryName
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: !Sub '${ProjectName}-${StageName}-build'
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: ChangeSet
          Actions:
            - Name: !Sub '${ProjectName}-${StageName}-changeset'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: !Sub '${ProjectName}-${StageName}-pipeline-changeset'
                #RoleArn: !Ref CloudformationServiceRole
                StackName: !Sub '${ProjectName}-${StageName}'
                TemplateConfiguration: !Sub 'BuildOutput::cfn/config/${StageName}-config.json'
                TemplatePath: 'BuildOutput::packaged.yaml'
              RunOrder: 1
        - Name: Deploy
          Actions:
              - Name: !Sub '${ProjectName}-${StageName}-deploy'
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                InputArtifacts:
                  - Name: BuildOutput
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  Capabilities: CAPABILITY_NAMED_IAM
                  ChangeSetName: !Sub '${ProjectName}-${StageName}-pipeline-changeset'
                  StackName: !Sub '${ProjectName}-${StageName}'
                  TemplateConfiguration: !Sub 'BuildOutput::cfn/config/${StageName}-config.json'
                  TemplatePath: 'BuildOutput::packaged.yaml'
                RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'role-${ProjectName}-${StageName}-build'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub 'policy-${ProjectName}-${StageName}-build-exec'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}-${StageName}-build'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}-${StageName}-build:*'
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${CodePipelineArtifactStoreBucket}'
                  - !Sub 'arn:aws:s3:::${CodePipelineArtifactStoreBucket}/*'
                  - !Sub 'arn:aws:s3:::s3-${AWS::Region}-${ProjectName}-${StageName}-build-resources'
                  - !Sub 'arn:aws:s3:::s3-${AWS::Region}-${ProjectName}-${StageName}-build-resources/*'
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'role-${ProjectName}-${StageName}-pipeline'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub 'policy-${ProjectName}-${StageName}-pipeline-exec'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                Resource:
                  - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}'
              - Effect: Allow
                Action:
                  - 'cloudformation:*'
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectName}-${StageName}/*"
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource:
                  - !Sub 'arn:aws:s3:::${CodePipelineArtifactStoreBucket}'
                  - !Sub 'arn:aws:s3:::${CodePipelineArtifactStoreBucket}/*'

  CloudformationServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'role-${ProjectName}-${StageName}-deploy'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub 'policy-${ProjectName}-${StageName}-deploy-exec'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: "Allow"
                Action:
                  - "*"
                Resource: '*'
